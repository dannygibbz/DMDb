{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/react-movie-database/src/SeasonSearch.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass SeasonSearch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      visible: false,\n      isLoaded: false,\n      items: [],\n      input: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(`https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`).then(response => response.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  render() {\n    let {\n      isLoaded,\n      items\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }\n      }, \"Loading ...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      }, \"Data has been recived\");\n    }\n  }\n\n}\n\nexport default SeasonSearch; //   onChange = event => {\n//     this.setState({ input: event.target.value })\n//   }\n//   handleSubmit = event => {\n//     event.preventDefault()\n//     const url = `https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => {\n//         this.setState({\n//           input: \"\",\n//           errorMessage: \"\",\n//           visible: true,\n//           //   episode: data.Episodes[0].Episode,\n//           //   title: data.Episodes[0].Title,\n//           //   released: data.Episodes[0].Released,\n//           //   season: data.Season,\n//         })\n//         console.log(data)\n//       })\n//       .catch(e => {\n//         this.setState({\n//           errorMessage:\n//             \"Sorry, nothing found under that name. Please try again.\",\n//         })\n//       })\n//   }\n// let showInformation = !this.state.visible ? (\n//   <div>\n//     <h1>Search Seasons Below</h1>\n//     <form onSubmit={this.handleSubmit}>\n//       <TextField\n//         value={this.state.input}\n//         onChange={this.onChange}\n//         id=\"filled-full-width\"\n//         label=\"Season\"\n//         style={{ width: \"50%\", marginTop: \"15px\" }}\n//         placeholder=\"Number\"\n//         InputLabelProps={{\n//           shrink: true,\n//         }}\n//         variant=\"filled\"\n//       />\n//     </form>\n//   </div>\n// ) : (\n//   <div>\n//     <div>\n//       <h1>Search Seasons Below</h1>\n//       <form onSubmit={this.handleSubmit}>\n//         <TextField\n//           value={this.state.input}\n//           onChange={this.onChange}\n//           id=\"filled-full-width\"\n//           label=\"Season\"\n//           style={{ width: \"50%\", marginTop: \"15px\" }}\n//           placeholder=\"Number\"\n//           InputLabelProps={{\n//             shrink: true,\n//           }}\n//           variant=\"filled\"\n//         />\n//       </form>\n//     </div>\n//     <div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <h1>Season: {this.state.season}</h1>\n//       </div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <b>\n//           Episode {this.state.episode}: {this.state.title}\n//         </b>\n//       </div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <b>Air Date: {this.state.released} </b>\n//       </div>\n//     </div>\n//   </div>\n// )\n// let notFound = this.state.errorMessage ? (\n//   <h3 style={{ color: \"red\" }}>{this.state.errorMessage}</h3>\n// ) : null","map":{"version":3,"sources":["/Users/danielgibbons/react-movie-database/src/SeasonSearch.js"],"names":["React","TextField","SeasonSearch","Component","constructor","state","visible","isLoaded","items","input","componentDidMount","fetch","then","response","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CACF,8BAA6B,KAAKN,KAAL,CAAWI,KAAM,2BAD5C,CAAL,CAGGG,IAHH,CAGQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHpB,EAIGF,IAJH,CAIQE,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM;AAFK,OAAd;AAID,KATH;AAUD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAsB,KAAKH,KAA/B;;AAEA,QAAI,CAACE,QAAL,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;AACF;;AAhCwC;;AAmC3C,eAAeL,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\n\nclass SeasonSearch extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      visible: false,\n      isLoaded: false,\n      items: [],\n      input: \"\",\n    }\n  }\n\n  componentDidMount() {\n    fetch(\n      `https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`\n    )\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n        })\n      })\n  }\n\n  render() {\n    let { isLoaded, items } = this.state\n\n    if (!isLoaded) {\n      return <div>Loading ...</div>\n    } else {\n      return <div>Data has been recived</div>\n    }\n  }\n}\n\nexport default SeasonSearch\n\n//   onChange = event => {\n//     this.setState({ input: event.target.value })\n//   }\n//   handleSubmit = event => {\n//     event.preventDefault()\n//     const url = `https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`\n//     fetch(url)\n//       .then(response => response.json())\n//       .then(data => {\n//         this.setState({\n//           input: \"\",\n//           errorMessage: \"\",\n//           visible: true,\n\n//           //   episode: data.Episodes[0].Episode,\n//           //   title: data.Episodes[0].Title,\n//           //   released: data.Episodes[0].Released,\n//           //   season: data.Season,\n//         })\n//         console.log(data)\n//       })\n//       .catch(e => {\n//         this.setState({\n//           errorMessage:\n//             \"Sorry, nothing found under that name. Please try again.\",\n//         })\n//       })\n//   }\n\n// let showInformation = !this.state.visible ? (\n//   <div>\n//     <h1>Search Seasons Below</h1>\n//     <form onSubmit={this.handleSubmit}>\n//       <TextField\n//         value={this.state.input}\n//         onChange={this.onChange}\n//         id=\"filled-full-width\"\n//         label=\"Season\"\n//         style={{ width: \"50%\", marginTop: \"15px\" }}\n//         placeholder=\"Number\"\n//         InputLabelProps={{\n//           shrink: true,\n//         }}\n//         variant=\"filled\"\n//       />\n//     </form>\n//   </div>\n// ) : (\n//   <div>\n//     <div>\n//       <h1>Search Seasons Below</h1>\n//       <form onSubmit={this.handleSubmit}>\n//         <TextField\n//           value={this.state.input}\n//           onChange={this.onChange}\n//           id=\"filled-full-width\"\n//           label=\"Season\"\n//           style={{ width: \"50%\", marginTop: \"15px\" }}\n//           placeholder=\"Number\"\n//           InputLabelProps={{\n//             shrink: true,\n//           }}\n//           variant=\"filled\"\n//         />\n//       </form>\n//     </div>\n//     <div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <h1>Season: {this.state.season}</h1>\n//       </div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <b>\n//           Episode {this.state.episode}: {this.state.title}\n//         </b>\n//       </div>\n//       <div style={{ marginTop: \"10px\" }}>\n//         <b>Air Date: {this.state.released} </b>\n//       </div>\n//     </div>\n//   </div>\n// )\n// let notFound = this.state.errorMessage ? (\n//   <h3 style={{ color: \"red\" }}>{this.state.errorMessage}</h3>\n// ) : null\n"]},"metadata":{},"sourceType":"module"}