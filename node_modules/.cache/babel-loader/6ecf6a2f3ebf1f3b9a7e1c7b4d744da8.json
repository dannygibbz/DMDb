{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/react-movie-database/src/App.js\";\nimport React from \"react\";\nimport NavTab from \"./NavTab\";\nimport MovieSearch from \"./MovieSearch\";\nimport PageThree from \"./PageThree\";\nimport TelevisionSearch from \"./TelevisionSearch\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/movie\",\n    render: () => /*#__PURE__*/React.createElement(MovieSearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/tv\",\n    render: () => /*#__PURE__*/React.createElement(TelevisionSearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 43\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/three\",\n    render: () => /*#__PURE__*/React.createElement(PageThree, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;\n/*\nWrite a function that takes in two arrays, and it \nreturns an array of all of the elements that are in both arrays\n*/\n// function divisibleByThree(array) {\n//   let divisibleNumbers = []\n//   for (let i = 0; i < array.length; i++) {\n//     let currentValue = array[i]\n//     if (currentValue % 3 === 0) {\n//       divisibleNumbers.push(currentValue)\n//     }\n//   }\n//   return divisibleNumbers\n// }\n// console.log(divisibleByThree([1, 21, 8, 30]))\n// function findCommonNumbers(arrayOne, arrayTwo) {\n//   let newSet = new Set()\n//   for (let i = 0; i < arrayOne.length; i++) {\n//     for (let j = 0; j < arrayTwo.length; j++) {\n//       let currentValueI = arrayOne[i]\n//       let currentValueJ = arrayTwo[j]\n//       if (currentValueI === currentValueJ) {\n//         newSet.add(currentValueI)\n//       }\n//     }\n//   }\n//   return Array.from(newSet)\n// }\n// console.log(findCommonNumbers([1, 2, 3], [2, 4, 6]))\n// function multiplyArray(array, number) {\n//   let multipliedArray = []\n//   for (let i = 0; i < array.length; i++) {\n//     let currentValue = array[i]\n//     let multiplier = currentValue * number\n//     multipliedArray.push(multiplier)\n//   }\n//   return multipliedArray\n// }\n// console.log(multiplyArray([1, 2, 3, 4, 5], 2))\n// function returnMultiplied(arrayOne, arrayTwo) {\n//   let finalArray = []\n//   for (let i = 0; i < arrayOne.length; i++) {\n//     let firstElement = arrayOne[i]\n//     let secondElement = arrayTwo[arrayTwo.length - i - 1]\n//     finalArray.push(firstElement * secondElement)\n//   }\n//   return finalArray\n// }\n// console.log(returnMultiplied([1, 2, 3], [4, 5, 6]))","map":{"version":3,"sources":["/Users/danielgibbons/react-movie-database/src/App.js"],"names":["React","NavTab","MovieSearch","PageThree","TelevisionSearch","BrowserRouter","Router","Route","App","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,cAAc,EAAE;AAAlB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAE,mBAAM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,MAAM,EAAE,mBAAM,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,MAAM,EAAE,mBAAM,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF,CADF;AAcD;;AAED,eAAeF,GAAf;AAEA;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourcesContent":["import React from \"react\"\nimport NavTab from \"./NavTab\"\nimport MovieSearch from \"./MovieSearch\"\nimport PageThree from \"./PageThree\"\nimport TelevisionSearch from \"./TelevisionSearch\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <NavTab />\n        </div>\n        <div style={{ justifyContent: \"center\" }}>\n          <Route path=\"/movie\" render={() => <MovieSearch />} />\n          <Route path=\"/tv\" render={() => <TelevisionSearch />} />\n          <Route path=\"/three\" render={() => <PageThree />} />\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n\n/*\nWrite a function that takes in two arrays, and it \nreturns an array of all of the elements that are in both arrays\n*/\n\n// function divisibleByThree(array) {\n//   let divisibleNumbers = []\n//   for (let i = 0; i < array.length; i++) {\n//     let currentValue = array[i]\n//     if (currentValue % 3 === 0) {\n//       divisibleNumbers.push(currentValue)\n//     }\n//   }\n//   return divisibleNumbers\n// }\n\n// console.log(divisibleByThree([1, 21, 8, 30]))\n\n// function findCommonNumbers(arrayOne, arrayTwo) {\n//   let newSet = new Set()\n//   for (let i = 0; i < arrayOne.length; i++) {\n//     for (let j = 0; j < arrayTwo.length; j++) {\n//       let currentValueI = arrayOne[i]\n//       let currentValueJ = arrayTwo[j]\n//       if (currentValueI === currentValueJ) {\n//         newSet.add(currentValueI)\n//       }\n//     }\n//   }\n//   return Array.from(newSet)\n// }\n\n// console.log(findCommonNumbers([1, 2, 3], [2, 4, 6]))\n\n// function multiplyArray(array, number) {\n//   let multipliedArray = []\n//   for (let i = 0; i < array.length; i++) {\n//     let currentValue = array[i]\n//     let multiplier = currentValue * number\n//     multipliedArray.push(multiplier)\n//   }\n//   return multipliedArray\n// }\n\n// console.log(multiplyArray([1, 2, 3, 4, 5], 2))\n\n// function returnMultiplied(arrayOne, arrayTwo) {\n//   let finalArray = []\n//   for (let i = 0; i < arrayOne.length; i++) {\n//     let firstElement = arrayOne[i]\n//     let secondElement = arrayTwo[arrayTwo.length - i - 1]\n//     finalArray.push(firstElement * secondElement)\n//   }\n\n//   return finalArray\n// }\n\n// console.log(returnMultiplied([1, 2, 3], [4, 5, 6]))\n"]},"metadata":{},"sourceType":"module"}