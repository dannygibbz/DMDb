{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/react-movie-database/src/TelevisionSearch.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass TelevisionSearch extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const url = `https://www.omdbapi.com/?t=${this.state.input}&apikey=982d108e`;\n      fetch(url).then(response => response.json()).then(data => {\n        this.setState({\n          input: \"\",\n          errorMessage: \"\",\n          visible: true,\n          title: data.Title,\n          year: data.Year,\n          plot: data.Plot,\n          poster: data.Poster,\n          rating: data.imdbRating,\n          rated: data.Rated,\n          cast: data.Actors,\n          episodes: data.Episodes[0].Title,\n          totalSeasons: data.totalSeasons\n        });\n        console.log(data);\n      }).catch(e => {\n        this.setState({\n          errorMessage: \"Sorry, nothing found under that name. Please try again.\"\n        });\n      });\n    };\n\n    this.state = {\n      visible: false\n    };\n  }\n\n  render() {\n    let poster = this.state.poster;\n    let showInformation = !this.state.visible ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Search TV Below\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.input,\n      onChange: this.onChange,\n      id: \"filled-full-width\",\n      label: \"TV Show\",\n      style: {\n        width: \"50%\",\n        marginTop: \"15px\"\n      },\n      placeholder: \"Title\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Search TV Below\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.input,\n      onChange: this.onChange,\n      id: \"filled-full-width\",\n      label: \"TV Show\",\n      style: {\n        width: \"50%\",\n        marginTop: \"15px\"\n      },\n      placeholder: \"Title\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: poster,\n      style: {\n        marginTop: \"15px\"\n      },\n      alt: \"TV Poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Title: \", this.state.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Year: \", this.state.year), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Rated: \", this.state.rated), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Cast: \", this.state.cast), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"IMDb Rating: \", this.state.rating), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Plot: \", this.state.plot), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Episodes: \", this.state.episodes), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Total Seasons:\", this.state.totalSeasons, \" \")));\n    let notFound = this.state.errorMessage ? /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, this.state.errorMessage) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, notFound, showInformation);\n  }\n\n}\n\nexport default TelevisionSearch;","map":{"version":3,"sources":["/Users/danielgibbons/react-movie-database/src/TelevisionSearch.js"],"names":["React","TextField","TelevisionSearch","Component","constructor","onChange","event","setState","input","target","value","handleSubmit","preventDefault","url","state","fetch","then","response","json","data","errorMessage","visible","title","Title","year","Year","plot","Plot","poster","Poster","rating","imdbRating","rated","Rated","cast","Actors","episodes","Episodes","totalSeasons","console","log","catch","e","render","showInformation","width","marginTop","shrink","notFound","color"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\n\nclass TelevisionSearch extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      visible: false,\n    }\n  }\n\n  onChange = event => {\n    this.setState({ input: event.target.value })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    const url = `https://www.omdbapi.com/?t=${this.state.input}&apikey=982d108e`\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          input: \"\",\n          errorMessage: \"\",\n          visible: true,\n          title: data.Title,\n          year: data.Year,\n          plot: data.Plot,\n          poster: data.Poster,\n          rating: data.imdbRating,\n          rated: data.Rated,\n          cast: data.Actors,\n          episodes: data.Episodes[0].Title,\n          totalSeasons: data.totalSeasons,\n        })\n        console.log(data)\n      })\n      .catch(e => {\n        this.setState({\n          errorMessage:\n            \"Sorry, nothing found under that name. Please try again.\",\n        })\n      })\n  }\n\n  render() {\n    let poster = this.state.poster\n    let showInformation = !this.state.visible ? (\n      <div>\n        <h1>Search TV Below</h1>\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            value={this.state.input}\n            onChange={this.onChange}\n            id=\"filled-full-width\"\n            label=\"TV Show\"\n            style={{ width: \"50%\", marginTop: \"15px\" }}\n            placeholder=\"Title\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"filled\"\n          />\n        </form>\n      </div>\n    ) : (\n      <div>\n        <div>\n          <h1>Search TV Below</h1>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              value={this.state.input}\n              onChange={this.onChange}\n              id=\"filled-full-width\"\n              label=\"TV Show\"\n              style={{ width: \"50%\", marginTop: \"15px\" }}\n              placeholder=\"Title\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"filled\"\n            />\n          </form>\n        </div>\n        <div>\n          <img\n            src={poster}\n            style={{ marginTop: \"15px\" }}\n            alt={\"TV Poster\"}></img>\n          <div>Title: {this.state.title}</div>\n          <div>Year: {this.state.year}</div>\n          <div>Rated: {this.state.rated}</div>\n          <div>Cast: {this.state.cast}</div>\n          <div>IMDb Rating: {this.state.rating}</div>\n          <div>Plot: {this.state.plot}</div>\n          <div>Episodes: {this.state.episodes}</div>\n          <div>Total Seasons:{this.state.totalSeasons} </div>\n        </div>\n      </div>\n    )\n    let notFound = this.state.errorMessage ? (\n      <h3 style={{ color: \"red\" }}>{this.state.errorMessage}</h3>\n    ) : null\n\n    return (\n      <div>\n        {notFound}\n        {showInformation}\n      </div>\n    )\n  }\n}\n\nexport default TelevisionSearch\n"]},"metadata":{},"sourceType":"module"}