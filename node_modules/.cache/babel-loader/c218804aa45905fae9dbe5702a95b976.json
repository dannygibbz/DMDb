{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/react-movie-database/src/TelevisionSearch.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass TelevisionSearch extends React.Component {\n  constructor() {\n    super();\n\n    this.onChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const url = ` https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`;\n      fetch(url).then(response => response.json()).then(data => {\n        this.setState({\n          input: \"\",\n          errorMessage: \"\",\n          visible: true,\n          title: data.Title,\n          year: data.Year,\n          plot: data.Plot,\n          poster: data.Poster,\n          rating: data.imdbRating,\n          rated: data.Rated,\n          cast: data.Actors,\n          episodes: data.Episodes[0].Title,\n          totalSeasons: data.totalSeasons\n        });\n        console.log(data);\n      }).catch(e => {\n        this.setState({\n          errorMessage: \"Sorry, nothing found under that name. Please try again.\"\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      character: {}\n    };\n  }\n\n  render() {\n    let poster = this.state.poster;\n    console.log(poster);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"Search TV Below\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      value: this.state.input,\n      onChange: this.onChange,\n      id: \"filled-full-width\",\n      label: \"TV Show\",\n      style: {\n        width: \"50%\",\n        marginTop: \"15px\"\n      },\n      placeholder: \"Title\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"img\", {\n      src: poster,\n      style: {\n        marginTop: \"15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Title: \", this.state.title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Year: \", this.state.year), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Rated: \", this.state.rated), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Cast: \", this.state.cast), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"IMDb Rating: \", this.state.rating), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Plot: \", this.state.plot), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Episodes: \", this.state.episodes), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \"Total Seasons: \"));\n  }\n\n}\n\nexport default TelevisionSearch;","map":{"version":3,"sources":["/Users/danielgibbons/react-movie-database/src/TelevisionSearch.js"],"names":["React","TextField","TelevisionSearch","Component","constructor","onChange","event","setState","input","target","value","handleSubmit","preventDefault","url","state","fetch","then","response","json","data","errorMessage","visible","title","Title","year","Year","plot","Plot","poster","Poster","rating","imdbRating","rated","Rated","cast","Actors","episodes","Episodes","totalSeasons","console","log","catch","e","loading","character","render","width","marginTop","shrink"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\n\nclass TelevisionSearch extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      loading: false,\n      character: {},\n    }\n  }\n\n  onChange = event => {\n    this.setState({ input: event.target.value })\n  }\n  handleSubmit = event => {\n    event.preventDefault()\n    const url = ` https://www.omdbapi.com/?t=${this.state.input}&Season=1&apikey=982d108e`\n    fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          input: \"\",\n          errorMessage: \"\",\n          visible: true,\n          title: data.Title,\n          year: data.Year,\n          plot: data.Plot,\n          poster: data.Poster,\n          rating: data.imdbRating,\n          rated: data.Rated,\n          cast: data.Actors,\n          episodes: data.Episodes[0].Title,\n          totalSeasons: data.totalSeasons,\n        })\n        console.log(data)\n      })\n      .catch(e => {\n        this.setState({\n          errorMessage:\n            \"Sorry, nothing found under that name. Please try again.\",\n        })\n      })\n  }\n\n  render() {\n    let poster = this.state.poster\n    console.log(poster)\n    return (\n      <div>\n        <div>\n          <h1>Search TV Below</h1>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              value={this.state.input}\n              onChange={this.onChange}\n              id=\"filled-full-width\"\n              label=\"TV Show\"\n              style={{ width: \"50%\", marginTop: \"15px\" }}\n              placeholder=\"Title\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"filled\"\n            />\n          </form>\n        </div>\n        <img src={poster} style={{ marginTop: \"15px\" }}></img>\n        <div>Title: {this.state.title}</div>\n        <div>Year: {this.state.year}</div>\n        <div>Rated: {this.state.rated}</div>\n        <div>Cast: {this.state.cast}</div>\n        <div>IMDb Rating: {this.state.rating}</div>\n        <div>Plot: {this.state.plot}</div>\n        <div>Episodes: {this.state.episodes}</div>\n        <div>Total Seasons: </div>\n      </div>\n    )\n  }\n}\n\nexport default TelevisionSearch\n"]},"metadata":{},"sourceType":"module"}