{"ast":null,"code":"var _jsxFileName = \"/Users/danielgibbons/react-movie-database/src/Converter.js\";\nimport React from \"react\";\nimport { throwStatement } from \"@babel/types\";\n\nclass Converter extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.convert = () => {\n      return this.setState({\n        input: (this.state.input - 32) * 5 / 9\n      });\n    };\n\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  render() {\n    let display = this.state.input;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Convert Temperatures!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Fahrenheit\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.input,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.convert,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Convert!\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, display));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["/Users/danielgibbons/react-movie-database/src/Converter.js"],"names":["React","throwStatement","Converter","Component","constructor","handleChange","e","setState","input","target","value","convert","state","render","display"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAOdC,YAPc,GAOCC,CAAC,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAlB,OAAd;AACD,KATa;;AAAA,SAUdC,OAVc,GAUJ,MAAM;AACd,aAAO,KAAKJ,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAG,CAAC,KAAKI,KAAL,CAAWJ,KAAX,GAAmB,EAApB,IAA0B,CAA3B,GAAgC;AAAzC,OAAd,CAAP;AACD,KAZa;;AAEZ,SAAKI,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAQDK,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWJ,KAAzB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAO,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KAAzB;AAAgC,MAAA,QAAQ,EAAE,KAAKH,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKM,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMG,OAAN,CALF,CADF;AASD;;AAzBqC;;AA4BxC,eAAeZ,SAAf","sourcesContent":["import React from \"react\"\nimport { throwStatement } from \"@babel/types\"\n\nclass Converter extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      input: \"\",\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ input: e.target.value })\n  }\n  convert = () => {\n    return this.setState({ input: ((this.state.input - 32) * 5) / 9 })\n  }\n  render() {\n    let display = this.state.input\n    return (\n      <div>\n        <h1>Convert Temperatures!</h1>\n        <p>Fahrenheit</p>\n        <input value={this.state.input} onChange={this.handleChange}></input>\n        <button onClick={this.convert}>Convert!</button>\n        <div>{display}</div>\n      </div>\n    )\n  }\n}\n\nexport default Converter\n"]},"metadata":{},"sourceType":"module"}